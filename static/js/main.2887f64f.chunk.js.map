{"version":3,"sources":["components/BmiForm/BmiForm.jsx","components/Info/Info.jsx","components/Bar/Bar.jsx","helpers/localStorage.js","components/App/App.jsx","index.js"],"names":["initialValues","weight","height","date","BmiForm","change","useState","state","setState","handleChange","e","target","value","name","Date","toLocaleString","split","className","htmlFor","id","type","min","max","placeholder","onChange","disabled","onClick","Info","bmi","deleteCard","data-test","Bar","labelData","bmiData","data","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","options","responsive","scales","xAxes","scaleLabel","display","labelString","fontSize","fontColor","gridLines","color","ticks","yAxes","beginAtZero","tooltips","titleFontSize","bodyFontSize","getData","key","localStorage","JSON","parse","getItem","err","console","error","storeData","item","setItem","stringify","App","setData","useEffect","map","obj","handleDelete","newState","filter","i","val","heightInM","toFixed","uuidv4","newVal","len","length","slice","info","ReactDOM","render","document","getElementById"],"mappings":"2aAIA,IAAMA,EAAgB,CACrBC,OAAQ,GACRC,OAAQ,GACRC,KAAM,IA0EQC,EAvEC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,mBAASN,GADJ,mBACxBO,EADwB,KACjBC,EADiB,KAGzBC,EAAe,SAAAC,GAAM,IAAD,IACHA,EAAEC,OAAlBC,EADmB,EACnBA,MAAOC,EADY,EACZA,KACTD,EAAQ,MACXA,EAAQ,KAET,IAAMT,GAAO,IAAIW,MAAOC,iBAAiBC,MAAM,KAAK,GACpDR,E,qVAAS,CAAD,GACJD,GADI,mBAENM,EAAOD,GAFD,qBAGPT,GAHO,MAYT,OACC,oCACC,yBAAKc,UAAU,OACd,yBAAKA,UAAU,cACd,2BAAOC,QAAQ,UAAf,kBACA,2BACCC,GAAG,SACHN,KAAK,SACLO,KAAK,SACLC,IAAI,IACJC,IAAI,MACJC,YAAY,KACZX,MAAOL,EAAMN,OACbuB,SAAUf,KAIZ,yBAAKQ,UAAU,cACd,2BAAOC,QAAQ,UAAf,kBACA,2BACCC,GAAG,SACHN,KAAK,SACLO,KAAK,SACLC,IAAI,IACJC,IAAI,MACJC,YAAY,MACZX,MAAOL,EAAML,OACbsB,SAAUf,MAIb,yBAAKQ,UAAU,UACd,4BACCE,GAAG,UACHF,UAAU,gBACVG,KAAK,SACLK,SAA2B,KAAjBlB,EAAMN,QAAkC,KAAjBM,EAAML,OACvCwB,QA1CiB,WACpBrB,EAAOE,GACPC,EAASR,KAmCP,oBCxBW2B,EApCF,SAAC,GAAmD,IAAjD1B,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,OAAQiB,EAAgC,EAAhCA,GAAIhB,EAA4B,EAA5BA,KAAMyB,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WAK7C,OACE,yBAAKZ,UAAU,cACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,aAAaa,YAAU,OAAvC,QACQF,GAER,yBAAKX,UAAU,aACb,0BAAMa,YAAU,UAAhB,WAAkC7B,EAAlC,OACA,0BAAM6B,YAAU,UAAhB,WAAkC5B,EAAlC,OACA,0BAAM4B,YAAU,QAAhB,SAA8B3B,IAGhC,4BAAQc,UAAU,aAAaS,QAjBlB,WACnBG,EAAWV,KAgBL,S,QCkEKY,EAnFH,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAuExB,OACE,oCACE,kBAAC,IAAD,CAAMC,KAxEG,SAAAC,GACX,IACMC,EADMD,EAAOE,WAAW,MACTC,qBAAqB,GAAI,GAAI,IAAK,KAIvD,OAHAF,EAASG,aAAa,EAAG,WACzBH,EAASG,aAAa,EAAG,WAElB,CACLC,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,MACPR,KAAMD,EACNU,gBAAiBP,EACjBQ,YAAa,UACbC,YAAa,EACbC,iBAAkB,EAClBC,sBAAuB,QACvBC,sBAAuB,MAuDTC,QAjDN,CACdC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,WAAY,CACVC,SAAS,EACTC,YAAa,OACbC,SAAU,GACVC,UAAW,SAEbC,UAAW,CACTJ,SAAS,EACTK,MAAO,SAETC,MAAO,CACLH,UAAW,QACXD,SAAU,MAIhBK,MAAO,CACL,CACER,WAAY,CACVC,SAAS,EACTC,YAAa,MACbC,SAAU,GACVC,UAAW,SAEbC,UAAW,CACTJ,SAAS,EACTK,MAAO,SAETC,MAAO,CACLH,UAAW,QACXD,SAAU,GACVM,aAAa,MAKrBC,SAAU,CACRC,cAAe,GACfC,aAAc,SCvEPC,EAAU,SAACC,GACvB,GAAKC,aAEL,IACC,OAAOC,KAAKC,MAAMF,aAAaG,QAAQJ,IACtC,MAAOK,GACRC,QAAQC,MAAR,6BAAoCP,EAApC,sBAA6DK,KAIlDG,EAAY,SAACR,EAAKS,GAC9B,GAAKR,aAEL,IACC,OAAOA,aAAaS,QAAQV,EAAKE,KAAKS,UAAUF,IAC/C,MAAOJ,GACRC,QAAQC,MAAR,6BAAoCP,EAApC,oBAA2DK,KC4E9CO,EAnFH,WACV,IADgB,EAEUzE,mBADL,kBAAM4D,EAAQ,SAAW,KAD9B,mBAET3D,EAFS,KAEFC,EAFE,OAGQF,mBAAS,IAHjB,mBAGT4B,EAHS,KAGH8C,EAHG,KAKhBC,oBAAU,WACRN,EAAU,OAAQpE,GAClB,IAAMJ,EAAOI,EAAM2E,IAAI,SAAAC,GAAG,OAAIA,EAAIhF,OAC5ByB,EAAMrB,EAAM2E,IAAI,SAAAC,GAAG,OAAIA,EAAIvD,MAEjCoD,EADc,CAAE7E,OAAMyB,SAErB,CAACrB,IAEJ,IAUM6E,EAAe,SAAAjE,GACnBwD,EAAU,YAAapE,GACvB,IAAI8E,EAAW9E,EAAM+E,OAAO,SAAAC,GAC1B,OAAOA,EAAEpE,KAAOA,IAElBX,EAAS6E,IAOX,OACE,yBAAKpE,UAAU,aACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,kBAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAASZ,OA7BI,SAAAmF,GACnB,IAAIC,EAAYD,EAAItF,OAAS,IAC7BsF,EAAI5D,KAAO4D,EAAIvF,QAAUwF,EAAYA,IAAYC,QAAQ,GACzDF,EAAIrE,GAAKwE,eACT,IAAIC,EAAM,sBAAOrF,GAAP,CAAciF,IACpBK,EAAMD,EAAOE,OACbD,EAAM,IAAGD,EAASA,EAAOG,MAAM,EAAGF,IACtCrF,EAASoF,MAuBH,kBAAC,EAAD,CAAK5D,UAAWE,EAAK/B,KAAM8B,QAASC,EAAKN,MACzC,6BACE,yBAAKX,UAAU,cACb,wBAAIA,UAAU,cAAd,eAEF,yBAAKA,UAAU,sBACZV,EAAMuF,OAAS,EACd,oCACGvF,EAAM2E,IAAI,SAAAc,GAAI,OACb,kBAAC,EAAD,CACE7B,IAAK6B,EAAK7E,GACVA,GAAI6E,EAAK7E,GACTlB,OAAQ+F,EAAK/F,OACbC,OAAQ8F,EAAK9F,OACbC,KAAM6F,EAAK7F,KACXyB,IAAKoE,EAAKpE,IACVC,WAAYuD,OAKhB,yBAAKnE,UAAU,qBAAf,kBAIkB,OAAzBiD,EAAQ,aACP,yBAAKjD,UAAU,UACb,4BAAQA,UAAU,gBAAgBS,QAvC3B,WACjBlB,EAAS0D,EAAQ,gBAsCP,SAKA,OC/Ed+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2887f64f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App/App.css';\r\n\r\nconst initialValues = {\r\n\tweight: '',\r\n\theight: '',\r\n\tdate: ''\r\n}\r\n\r\nconst BmiForm = ({ change }) => {\r\n\tconst [state, setState] = useState(initialValues);\r\n\r\n\tconst handleChange = e => {\r\n\t\tlet { value, name } = e.target;\r\n\t\tif (value > 999) {\r\n\t\t\tvalue = 999;\r\n\t\t}\r\n\t\tconst date = new Date().toLocaleString().split(',')[0];\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[name]: value,\r\n\t\t\tdate\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tchange(state);\r\n\t\tsetState(initialValues);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col m6 s12\">\r\n\t\t\t\t\t<label htmlFor=\"weight\">Weight (in kg)</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"weight\"\r\n\t\t\t\t\t\tname=\"weight\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\tmax=\"999\"\r\n\t\t\t\t\t\tplaceholder=\"50\"\r\n\t\t\t\t\t\tvalue={state.weight}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col m6 s12\">\r\n\t\t\t\t\t<label htmlFor=\"height\">Height (in cm)</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"height\"\r\n\t\t\t\t\t\tname=\"height\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\tmax=\"999\"\r\n\t\t\t\t\t\tplaceholder=\"176\"\r\n\t\t\t\t\t\tvalue={state.height}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"bmi-btn\"\r\n\t\t\t\t\tclassName=\"calculate-btn\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdisabled={state.weight === '' || state.height === ''}\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\tCalculate BMI\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nBmiForm.propTypes = {\r\n\tchange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BmiForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Info = ({ weight, height, id, date, bmi, deleteCard }) => {\r\n  const handleDelete = () => {\r\n    deleteCard(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col m6 s12\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\" data-test=\"bmi\">\r\n            BMI: {bmi}\r\n          </span>\r\n          <div className=\"card-data\">\r\n            <span data-test=\"weight\">Weight: {weight} kg</span>\r\n            <span data-test=\"height\">Height: {height} cm</span>\r\n            <span data-test=\"date\">Date: {date}</span>\r\n          </div>\r\n\r\n          <button className=\"delete-btn\" onClick={handleDelete}>\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfo.propTypes = {\r\n  weight: PropTypes.string,\r\n  height: PropTypes.string,\r\n  id: PropTypes.string,\r\n  date: PropTypes.string,\r\n  bmi: PropTypes.string,\r\n  deleteCard: PropTypes.func\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Bar = ({ labelData, bmiData }) => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(63, 81, 181, 700);\r\n    gradient.addColorStop(0, '#929dd9');\r\n    gradient.addColorStop(1, '#172b4d');\r\n\r\n    return {\r\n      labels: labelData,\r\n      datasets: [\r\n        {\r\n          label: 'BMI',\r\n          data: bmiData,\r\n          backgroundColor: gradient,\r\n          borderColor: '#3F51B5',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          pointHoverBorderColor: 'white',\r\n          pointHoverBorderWidth: 2\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Date',\r\n            fontSize: 18,\r\n            fontColor: 'white'\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            color: 'white'\r\n          },\r\n          ticks: {\r\n            fontColor: 'white',\r\n            fontSize: 16\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'BMI',\r\n            fontSize: 18,\r\n            fontColor: 'white'\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            color: 'white'\r\n          },\r\n          ticks: {\r\n            fontColor: 'white',\r\n            fontSize: 16,\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      titleFontSize: 13,\r\n      bodyFontSize: 13\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nBar.propTypes = {\r\n  labelData: PropTypes.array,\r\n  bmiData: PropTypes.array\r\n};\r\n\r\nexport default Bar;\r\n","export const getData = (key) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn JSON.parse(localStorage.getItem(key));\r\n\t} catch (err) {\r\n\t\tconsole.error(`Error getting item ${key} from localStorage`, err);\r\n\t}\r\n};\r\n\r\nexport const storeData = (key, item) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn localStorage.setItem(key, JSON.stringify(item));\r\n\t} catch (err) {\r\n\t\tconsole.error(`Error storing item ${key} to localStorage`, err);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport './App.css';\r\nimport BmiForm from '../BmiForm/BmiForm';\r\nimport Info from '../Info/Info';\r\nimport Bar from '../Bar/Bar';\r\nimport { getData, storeData } from '../../helpers/localStorage';\r\n\r\nconst App = () => {\r\n  const initialState = () => getData('data') || [];\r\n  const [state, setState] = useState(initialState);\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    storeData('data', state);\r\n    const date = state.map(obj => obj.date);\r\n    const bmi = state.map(obj => obj.bmi);\r\n    let newData = { date, bmi };\r\n    setData(newData);\r\n  }, [state]);\r\n\r\n  const handleChange = val => {\r\n    let heightInM = val.height / 100;\r\n    val.bmi = (val.weight / (heightInM * heightInM)).toFixed(2);\r\n    val.id = uuidv4();\r\n    let newVal = [...state, val];\r\n    let len = newVal.length;\r\n    if (len > 7) newVal = newVal.slice(1, len);\r\n    setState(newVal);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    storeData('lastState', state);\r\n    let newState = state.filter(i => {\r\n      return i.id !== id;\r\n    });\r\n    setState(newState);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    setState(getData('lastState'));\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row center'>\r\n        <h1 className='white-text'> BMI Tracker </h1>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col m12 s12'>\r\n          <BmiForm change={handleChange} />\r\n          <Bar labelData={data.date} bmiData={data.bmi} />\r\n          <div>\r\n            <div className='row center'>\r\n              <h4 className='white-text'>7 Day Data</h4>\r\n            </div>\r\n            <div className='data-container row'>\r\n              {state.length > 0 ? (\r\n                <>\r\n                  {state.map(info => (\r\n                    <Info\r\n                      key={info.id}\r\n                      id={info.id}\r\n                      weight={info.weight}\r\n                      height={info.height}\r\n                      date={info.date}\r\n                      bmi={info.bmi}\r\n                      deleteCard={handleDelete}\r\n                    />\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                  <div className='center white-text'>No log found</div>\r\n                )}\r\n            </div>\r\n          </div>\r\n          {getData('lastState') !== null ? (\r\n            <div className='center'>\r\n              <button className='calculate-btn' onClick={handleUndo}>\r\n                Undo\r\n              </button>\r\n            </div>\r\n          ) : (\r\n              ''\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}